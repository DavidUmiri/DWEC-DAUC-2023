// mapas

let map = new Map();
map.set("Clave", ["Valor1","Valor2","Valor3"])
map.set("Andalucia", ["Granada","Almeria","Cadiz"])
map.set("Madrid", ["Vallecas","Elipa","Mostoles"])

// formularios

acceder a text --> elemento.value
radio button --> se agrupan con un name común --> atributo value y checked (true si está seleccionado)
select --> atributo options --> atributo selectIndex --> -1 si no está seleccionada

// formularios validación

let nombre = document.forms["idFormulario"].elements["idNombre"]
nombre.checkValidity() --> true --> si pasa la validación
nombre.validity --> propiedades
nombre.validationMessage --> devuelve el mensaje por defecto
modificar ese mensaje --> nombre.setCustomValidity("error")
nombre.validationMessage --> devuelve el mensaje

// funciones validación

checkValidity() --> nos dice si el campo al que se aplica es o no válido

validationMessage --> texto del error de validación

validity:

	valueMissing -->  valdrá true si el campo tiene el atributo required pero no se ha introducido nada en él
	typeMismatch --> indica si el contenido del campo no cumple con su atributo type
	patternMismatch --> indica si no se cumple con el pattern indicado
	tooShort / tooLong --> indica si no se cumple el atributo minlength/maxlength
	rangeUnderflow / rangeOverflow --> indica si no se cumple el atributo min / max
	stepMismatch --> indica si no se cumple el atributo step del campo 
	customError --> indica al campo se le ha puesto un error personalizado con setCustomValidity
	valid --> indica si este campo es válido

// vuejs

exámen --> formularios y vuejs

página web que usaremos en el exámen --> 
	https://agustinprf.github.io/dwec/

estilos de api --> options api y composition api

nosotros vamos a usar --> Composition API (VUE 3)

Composition API --> mejora la reutilización de código y su organización por funcionalidades

documentación oficial --> 
	https://vuejs.org/guide/introduction.html

15 píldoras --> 
	https://vuejs.org/tutorial/#step-1

ejemplos --> 
	https://vuejs.org/examples/#hello-world

entorno -->
	sudo apt-get install nodejs npm 
	node -v
	npm -version

comandos --> 
	npm init vue@latest

en la carpeta -->
	npm install

para levantar el servidor -->
	npm run dev

servidor --> 
	➜  Local:   http://127.0.0.1:5173/
  	➜  Network: use --host to expose
  	➜  press h to show help

Shortcuts --> atajos
	press r to restart the server
	press u to show server url
	press o to open in browser
	press q to quit

// componentes

<template></template>

<script></script>

<style lang="scss"></style>

// parámetros

<script setup>
    defineProps({
        parametro: {
            type: String,
            required: true
        }
    })
</script>

<template>
    <h1> {{ parametro }} </h1>
</template>

// 15 PÍLDORAS

ref --> para elementos simples

reactive --> para objetos

// variables a utillizar en el template
const contador = reactive({ contador: 0 })
const mensaje = ref('Hello World!')

// variables internas que no utilizare en el template
const autor = null
console.log(mensaje.value);
console.log(contador.cuenta);

REF
	Elementos simples
	value

REACTIVE
	Object
	value NO

